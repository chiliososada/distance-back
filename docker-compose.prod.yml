version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: distance-back:${TAG:-latest}
    container_name: distance-back
    restart: always
    ports:
      - "80:80"
    environment:
      - GIN_MODE=release
      - GO_ENV=production
    depends_on:
      - mysql
      - redis
      - elasticsearch
    networks:
      - distance-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  mysql:
    image: mysql:8.0
    container_name: distance-mysql-prod
    restart: always
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - distance-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  redis:
    image: redis:7.0-alpine
    container_name: distance-redis-prod
    restart: always
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - distance-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          memory: 512M

  elasticsearch:
    image: elasticsearch:8.10.4
    container_name: distance-elasticsearch-prod
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    expose:
      - "9200"
      - "9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - distance-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  nginx:
    image: nginx:alpine
    container_name: distance-nginx
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - distance-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  mysql-data:
  redis-data:
  elasticsearch-data:


networks:
  distance-network:
    driver: bridge
